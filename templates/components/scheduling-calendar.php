<?php
if (!defined('ABSPATH')) {
    exit;
}

function render_scheduling_calendar() {
    $calendly_url = get_option('tfsp_calendly_url', 'https://calendly.com/abraizbashir/30min');
    ?>
    
    <div class="scheduling-section">
        <h2>ðŸ“… Schedule Your Success Session</h2>
        <p>Connect with your dedicated <strong>College and Career Coach</strong> for personalized guidance</p>
        
        <div class="calendar-container">
            <div class="calendar-header">
                <button class="nav-btn" onclick="changeMonth(-1)">â€¹</button>
                <h3 id="currentMonth"></h3>
                <button class="nav-btn" onclick="changeMonth(1)">â€º</button>
            </div>
            
            <div class="calendar-grid" id="calendarGrid">
                <!-- Calendar will be generated by JavaScript -->
            </div>
            
            <div class="available-times" id="availableTimes" style="display: none;">
                <h4>Available Times</h4>
                <div class="time-slots" id="timeSlots">
                    <!-- Time slots will be populated -->
                </div>
            </div>
        </div>
        
        <div class="calendar-actions">
            <a href="<?php echo esc_url($calendly_url); ?>" target="_blank" class="btn-primary">
                ðŸ“… Book via Calendly
            </a>
            <button class="btn-secondary" onclick="requestCustomTime()">Request Custom Time</button>
        </div>
    </div>
    
    <style>
    .scheduling-section {
        background: white;
        padding: 30px;
        border-radius: 16px;
        margin: 30px 0;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    }
    .scheduling-section h2 {
        margin: 0 0 8px 0;
        color: #2d5016;
        font-size: 24px;
        font-weight: 700;
    }
    .scheduling-section p {
        margin: 0 0 25px 0;
        color: #666;
    }
    
    .calendar-container {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 20px;
        margin: 20px 0;
    }
    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    .calendar-header h3 {
        margin: 0;
        color: #333;
        font-size: 20px;
    }
    .nav-btn {
        background: #8BC34A;
        color: white;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 18px;
        transition: background 0.3s;
    }
    .nav-btn:hover {
        background: #7CB342;
    }
    
    .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 2px;
        margin-bottom: 20px;
    }
    .calendar-day {
        aspect-ratio: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        background: white;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s;
        font-size: 14px;
        font-weight: 500;
    }
    .calendar-day:hover {
        background: #e3f2fd;
    }
    .calendar-day.available {
        background: #e8f5e8;
        color: #2e7d32;
    }
    .calendar-day.available:hover {
        background: #c8e6c9;
    }
    .calendar-day.selected {
        background: #8BC34A;
        color: white;
    }
    .calendar-day.disabled {
        background: #f5f5f5;
        color: #ccc;
        cursor: not-allowed;
    }
    .day-header {
        background: #333;
        color: white;
        font-weight: 600;
        font-size: 12px;
        text-transform: uppercase;
    }
    
    .available-times {
        margin-top: 20px;
        padding-top: 20px;
        border-top: 1px solid #e0e0e0;
    }
    .available-times h4 {
        margin: 0 0 15px 0;
        color: #333;
    }
    .time-slots {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 10px;
    }
    .time-slot {
        background: white;
        border: 2px solid #8BC34A;
        color: #8BC34A;
        padding: 10px 15px;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s;
        font-weight: 500;
    }
    .time-slot:hover {
        background: #8BC34A;
        color: white;
    }
    
    .calendar-actions {
        display: flex;
        gap: 15px;
        margin-top: 25px;
    }
    .btn-primary {
        background: #8BC34A;
        color: white;
        padding: 12px 24px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: background 0.3s;
    }
    .btn-primary:hover {
        background: #7CB342;
    }
    .btn-secondary {
        background: transparent;
        color: #8BC34A;
        border: 2px solid #8BC34A;
        padding: 10px 22px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s;
    }
    .btn-secondary:hover {
        background: #8BC34A;
        color: white;
    }
    </style>
    
    <script>
    let currentDate = new Date();
    let selectedDate = null;
    
    // Sample available dates (in real implementation, fetch from Calendly API)
    const availableDates = [
        '2024-09-25', '2024-09-26', '2024-09-30', 
        '2024-10-01', '2024-10-03', '2024-10-07', 
        '2024-10-08', '2024-10-10', '2024-10-14'
    ];
    
    // Sample time slots
    const timeSlots = [
        '9:00 AM', '10:00 AM', '11:00 AM', 
        '2:00 PM', '3:00 PM', '4:00 PM'
    ];
    
    function generateCalendar() {
        const year = currentDate.getFullYear();
        const month = currentDate.getMonth();
        
        // Update month header
        document.getElementById('currentMonth').textContent = 
            new Date(year, month).toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
        
        const firstDay = new Date(year, month, 1).getDay();
        const daysInMonth = new Date(year, month + 1, 0).getDate();
        
        let calendarHTML = '';
        
        // Day headers
        const dayHeaders = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        dayHeaders.forEach(day => {
            calendarHTML += `<div class="calendar-day day-header">${day}</div>`;
        });
        
        // Empty cells for days before month starts
        for (let i = 0; i < firstDay; i++) {
            calendarHTML += '<div class="calendar-day disabled"></div>';
        }
        
        // Days of the month
        for (let day = 1; day <= daysInMonth; day++) {
            const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
            const isAvailable = availableDates.includes(dateStr);
            const isPast = new Date(dateStr) < new Date().setHours(0,0,0,0);
            
            let classes = 'calendar-day';
            if (isPast) {
                classes += ' disabled';
            } else if (isAvailable) {
                classes += ' available';
            }
            
            calendarHTML += `<div class="${classes}" onclick="selectDate('${dateStr}')">${day}</div>`;
        }
        
        document.getElementById('calendarGrid').innerHTML = calendarHTML;
    }
    
    function selectDate(dateStr) {
        if (availableDates.includes(dateStr)) {
            selectedDate = dateStr;
            
            // Update visual selection
            document.querySelectorAll('.calendar-day').forEach(day => {
                day.classList.remove('selected');
            });
            event.target.classList.add('selected');
            
            // Show available times
            showAvailableTimes(dateStr);
        }
    }
    
    function showAvailableTimes(dateStr) {
        const timesContainer = document.getElementById('availableTimes');
        const slotsContainer = document.getElementById('timeSlots');
        
        let slotsHTML = '';
        timeSlots.forEach(time => {
            slotsHTML += `<div class="time-slot" onclick="bookTime('${dateStr}', '${time}')">${time}</div>`;
        });
        
        slotsContainer.innerHTML = slotsHTML;
        timesContainer.style.display = 'block';
    }
    
    function bookTime(date, time) {
        if (confirm(`Book session for ${new Date(date).toLocaleDateString()} at ${time}?`)) {
            // In real implementation, this would book via Calendly API or send request
            alert('Booking request sent! You will receive a confirmation email shortly.');
        }
    }
    
    function changeMonth(direction) {
        currentDate.setMonth(currentDate.getMonth() + direction);
        generateCalendar();
        document.getElementById('availableTimes').style.display = 'none';
    }
    
    function requestCustomTime() {
        const customRequest = prompt('Please describe your preferred date and time:');
        if (customRequest) {
            // Send custom time request
            jQuery.post(ajaxurl, {
                action: 'request_custom_meeting_time',
                request: customRequest,
                nonce: '<?php echo wp_create_nonce('custom_meeting_nonce'); ?>'
            }, function(response) {
                if (response.success) {
                    alert('Custom time request sent! Your College and Career Coach will contact you soon.');
                } else {
                    alert('Error sending request. Please try again.');
                }
            });
        }
    }
    
    // Initialize calendar
    document.addEventListener('DOMContentLoaded', function() {
        generateCalendar();
    });
    </script>
    <?php
}
?>
